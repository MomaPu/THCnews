from app.config import create_app, db
from app.models.models import NewsSource, NewsPost
from sqlalchemy import text  # –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∏–º–ø–æ—Ä—Ç

app = create_app()

with app.app_context():
	# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
	try:
		result = db.session.execute(text('SELECT 1'))  # –î–æ–±–∞–≤—å—Ç–µ text()
		print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ")
	except Exception as e:
		print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
		import traceback

		traceback.print_exc()
		exit(1)

	# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
	try:
		tables = db.inspect(db.engine).get_table_names()
		print(f"üìä –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ: {tables}")
	except Exception as e:
		print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü: {e}")
		exit(1)

	# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
	try:
		if 'news_source' in tables:
			# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
			existing = NewsSource.query.filter_by(source_id='test_channel').first()
			if not existing:
				test_source = NewsSource(
					platform='test',
					source_id='test_channel',
					source_name='Test Channel',
					source_type='test'
				)
				db.session.add(test_source)
				db.session.flush()

				test_post = NewsPost(
					platform='test',
					platform_post_id='12345',  # –°—Ç—Ä–æ–∫–æ–≤—ã–π ID!
					source_id=test_source.id,
					text='Test post content',
					author='Test Author'
				)
				db.session.add(test_post)
				db.session.commit()
				print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
			else:
				print("‚ÑπÔ∏è –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç")

		# –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞—Ç–Ω–æ
		posts = NewsPost.query.all()
		print(f"üìù –ü–æ—Å—Ç–æ–≤ –≤ –±–∞–∑–µ: {len(posts)}")
		for post in posts:
			print(f"  - ID: {post.platform_post_id} (—Ç–∏–ø: {type(post.platform_post_id).__name__})")

	except Exception as e:
		print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –¥–∞–Ω–Ω—ã–º–∏: {e}")
		db.session.rollback()
		import traceback

		traceback.print_exc()